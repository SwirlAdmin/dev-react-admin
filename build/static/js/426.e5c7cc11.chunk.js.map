{"version":3,"file":"static/js/426.e5c7cc11.chunk.js","mappings":"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","sources":["pages/VideoEditPage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { Dropdown, DropdownButton, Form, InputGroup } from 'react-bootstrap';\r\nimport { ChromePicker } from 'react-color';\r\nimport \"../components/upload-video/upload.css\"\r\nimport { IoColorPaletteOutline } from \"react-icons/io5\";\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport RangeSlider from 'react-range-slider-input';\r\nimport { FaPlay, FaSpinner } from \"react-icons/fa\";\r\nimport 'react-range-slider-input/dist/style.css';\r\n\r\nimport { MdAddShoppingCart } from \"react-icons/md\";\r\nimport { BiArrowBack, BiStar, BiTrash } from 'react-icons/bi';\r\nimport { BsFillStarFill } from 'react-icons/bs';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { FallingLines } from 'react-loader-spinner';\r\nimport countryCodes from '../utils/countryCodes';\r\nimport VideoPreviewModel from '../components/video-preview/VideoPreviewModel';\r\nimport SelecteProducts from '../components/upload/SelecteProducts';\r\nimport UplaodFile from '../components/upload/UplaodFIle';\r\nimport SelectPlayList from '../components/upload/SelectPlayList';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\n\r\n\r\nfunction getPhoneCodeByCountryCode(code) {\r\n    const country = countryCodes.find(country => country.code === code);\r\n    return country ? country.phoneCode : null;\r\n}\r\nfunction getCountryCodeByPhoneCode(phonecode) {\r\n    let x;\r\n    if (phonecode == \"+1\") {\r\n        x = \"US\"\r\n    } else if (phonecode == \"+91\") {\r\n        x = \"IN\"\r\n    } else if (phonecode == \"+61\") {\r\n        x = \"AU\"\r\n    }\r\n\r\n    return x\r\n}\r\nconst VideoEditPage = () => {\r\n    const navigate = useNavigate()\r\n    const [selectedTab, setSelectedTab] = useState('0');\r\n    const [selectedCTATab, setSelectedCTATab] = useState('0');\r\n    const [selectedItems, setSelectedItems] = useState([]);\r\n    const [selectedCountry, setSelectedCountry] = useState('US')\r\n    const [selectedCallNowType, setSelectedCallNowType] = useState('0')\r\n    const [color, setColor] = useState('#000000');\r\n    const [color2, setColor2] = useState('#ffa800');\r\n    const [showColorPicker, setShowColorPicker] = useState(false);\r\n    const [showColorPicker2, setShowColorPicker2] = useState(false);\r\n    const [previewUrl, setPreviewUrl] = useState(null);\r\n    const [videoFIle, setvideoFIle] = useState(null);\r\n    const [previewModel, setPreviewModel] = useState(false)\r\n    const colorPickerRef = useRef(null);\r\n    const colorPickerRef2 = useRef(null);\r\n    const [coverImageData, setCoverImageData] = useState(null);\r\n    const [selectedPlalist, setselectedPlalist] = useState([]);\r\n    const [loadingPercent, setLoadingPercent] = useState(0)\r\n    const [imagePreview, setImagePreview] = useState(null)\r\n    const user = useSelector(state => state.auth.user)\r\n    const [playlists, setPlaylists] = useState([])\r\n    const [products, setProducts] = useState([])\r\n    const [videoSettings, setVideoSettings] = useState({})\r\n    const [number, setNumber] = useState(\"\")\r\n    const [image, setImage] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const [inputFields, setInputFields] = useState({\r\n        videoTitle: '',\r\n        ctaBtn: '',\r\n        videURL: '',\r\n        pageUrl: '',\r\n        videoType: '',\r\n        videLength: 0\r\n\r\n    })\r\n    const [fetchedVideoData, setFetchedVideoData] = useState({})\r\n\r\n    const location = useLocation()\r\n    const urlarray = location.pathname.split('/')\r\n    const video_id = urlarray[urlarray.length - 1]\r\n    const videoData = useSelector(state => state.auth.videoDataForEdit)\r\n\r\n    // setPreviewUrl(videoData.)\r\n    function extractFieldAndJoin(array, fieldName) {\r\n        // Check if the array is not empty\r\n        if (array.length === 0) {\r\n            return \"\"; // Return an empty string if the array is empty\r\n        }\r\n\r\n        // Extract the specified field from each object\r\n        const values = array.map(obj => obj[fieldName]);\r\n\r\n        // Join the values into a comma-separated string\r\n        const result = values.join(\", \");\r\n\r\n        return result;\r\n    }\r\n    const videoRef = useRef(null);\r\n    const handleColorChange = (newColor) => {\r\n        setColor(newColor.hex);\r\n    };\r\n    const clearPreview = () => {\r\n        setPreviewUrl(null);\r\n        setvideoFIle(null)\r\n    };\r\n\r\n    const handleClosePreviewModel = () => {\r\n        setPreviewModel(false)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setShowColorPicker(!showColorPicker);\r\n    };\r\n    const handleColorChange2 = (newColor) => {\r\n        setColor2(newColor.hex);\r\n    };\r\n    const handleInputChangeAllFields = (e) => {\r\n        const { name, value } = e.target;\r\n        setInputFields(prevInputFields => ({\r\n            ...prevInputFields,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleClick2 = () => {\r\n        setShowColorPicker2(!showColorPicker2);\r\n    };\r\n\r\n    const handleTabChange = (event) => {\r\n        setSelectedTab(event.target.value);\r\n        setPreviewUrl(null)\r\n        setvideoFIle(null)\r\n    };\r\n    const handleCTATabChange = (event) => {\r\n        setSelectedCTATab(event.target.value);\r\n    };\r\n    const handleDropdownSelect = (value) => {\r\n        setSelectedCountry(value);\r\n    };\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (colorPickerRef.current && !colorPickerRef.current.contains(event.target)) {\r\n                setShowColorPicker(false);\r\n            }\r\n            if (colorPickerRef2.current && !colorPickerRef2.current.contains(event.target)) {\r\n                setShowColorPicker2(false);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n    const handleInputChange = (event) => {\r\n        setvideoFIle(event.target.value);\r\n        handleInputChangeAllFields(event)\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     if (videoRef.current) {\r\n    //         const videoElement = videoRef.current\r\n    //         videoElement.addEventListener('loadedmetadata', () => {\r\n    //             width = videoElement.videoWidth;\r\n    //             height = videoElement.videoHeight;\r\n\r\n\r\n    //         });\r\n    //     }\r\n    // }, [videoRef])\r\n\r\n    const videoDimentionType = () => {\r\n        const video = videoRef.current\r\n        if (video) {\r\n            video.addEventListener('loadedmetadata', () => {\r\n                const width = video.videoWidth;\r\n                const height = video.videoHeight;\r\n\r\n                setInputFields(prevInputFields => ({\r\n                    ...prevInputFields,\r\n                    videLength: video.duration,\r\n                }));\r\n                if (height > width) {\r\n                    setInputFields(prevInputFields => ({\r\n                        ...prevInputFields,\r\n                        videoType: \"portrait\",\r\n                    }));\r\n                } else if (width === height) {\r\n                    setInputFields(prevInputFields => ({\r\n                        ...prevInputFields,\r\n                        videoType: \"square\",\r\n                    }));\r\n                } else {\r\n                    setInputFields(prevInputFields => ({\r\n                        ...prevInputFields,\r\n                        videoType: \"landscape\",\r\n                    }));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // // Function to handle file selection\r\n    // const handleFileSelect = event => {\r\n    //     const file = event.target.files[0];\r\n    //     setCoverImageData(file);\r\n\r\n    // }\r\n\r\n    const handleFileSelect = (e) => {\r\n        const file = e.target.files[0];\r\n\r\n        if (file) {\r\n            setImage(file)\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                const imageData = reader.result;\r\n                setImagePreview(imageData);\r\n                // You can send the binary data (imageData) to your server here\r\n            };\r\n            reader.readAsDataURL(file); // Convert the file to a base64 encoded string\r\n        }\r\n    };\r\n    const fileInputRef = useRef(null);\r\n\r\n    const clearSelection = () => {\r\n        setCoverImageData(null);\r\n        setImagePreview(null)\r\n        if (fileInputRef.current) {\r\n            fileInputRef.current.value = ''; // Reset file input value\r\n        }\r\n    };\r\n    const handleSubmitEdit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n\r\n        try {\r\n            // setLoadingPercent(0);\r\n            const formData = new FormData();\r\n\r\n            formData.append('image', image);\r\n\r\n            formData.append('videoId', videoData.video_id);\r\n            formData.append('uploadType', selectedTab);\r\n            formData.append('selectedCallNowType', selectedCallNowType);\r\n            formData.append('videURL', inputFields.videURL);\r\n            formData.append('videoTitle', inputFields.videoTitle);\r\n            formData.append('cta_type', selectedCTATab);\r\n            formData.append('tollfree_or_phone', selectedCallNowType);\r\n            formData.append('ctaButton', JSON.stringify({\r\n                cta_btn_text: inputFields.ctaBtn,\r\n                cta_bg_color: color,\r\n                cta_text_color: color2\r\n            }));\r\n\r\n            formData.append('selectedPlylist', extractFieldAndJoin(selectedPlalist, \"id\"));\r\n            formData.append('connected_products', extractFieldAndJoin(selectedItems, \"productId\"));\r\n            // formData.append('cover_image', image);\r\n            formData.append('videoType', inputFields.videoType);\r\n            formData.append('video_duration', inputFields.videLength);\r\n            formData.append('country', getPhoneCodeByCountryCode(selectedCountry));\r\n            formData.append('number', number);\r\n            // formData.append('videoId', res.data.key.split(\".\")[0]);\r\n            // formData.append('uploadedVideoUrl', res.data.url.split('?')[0]);\r\n            formData.append('brandId', user.brand_id);\r\n            formData.append('productUrl', inputFields.pageUrl);\r\n            await axios.patch(\"https://liveshopping.asia/updateVideoData\", formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }).then((res) => {\r\n\r\n                setLoading(false)\r\n                toast.success(\"Swirl updated successfully!\")\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                setLoading(false)\r\n                toast.error(\"Something went wrong !\")\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.error(\"Something went wrong !\")\r\n        }\r\n    }\r\n\r\n    const getPlalists = async () => {\r\n        try {\r\n            await axios.get(`https://liveshopping.asia/getPlaylistByBrandId?brandId=${user.brand_id}`).then((res) => {\r\n                if (res.data.playlist) {\r\n                    setPlaylists(res.data.playlist)\r\n                } else {\r\n                    setPlaylists([])\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    const getProducts = async () => {\r\n        try {\r\n            await axios.get(`https://liveshopping.asia/getProductsByBrandId?brandId=${user.brand_id}`).then((res) => {\r\n                if (res.data.products) {\r\n                    setProducts(res.data.products)\r\n                } else {\r\n                    setProducts([])\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    const getVideoSettings = async () => {\r\n        try {\r\n            await axios.get(`https://liveshopping.asia/getSwirlShortCodeInfoByBrandId?brandId=${user.brand_id}`).then((res) => {\r\n\r\n                if (res.data.sscResponse) {\r\n                    setVideoSettings(res.data.sscResponse.brandCustomization)\r\n                }\r\n\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const getVideoData = async () => {\r\n        try {\r\n            await axios.get(`https://liveshopping.asia/getVideoInfoByVideoId?videoId=${videoData.video_id}`).then((res) => {\r\n                if (res.data?.swirl) {\r\n                    setFetchedVideoData(res.data.swirl)\r\n\r\n                }\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            })\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPlalists()\r\n        getProducts()\r\n        getVideoSettings()\r\n        getVideoData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (fetchedVideoData) {\r\n            const filteredObjects = playlists.filter(obj => {\r\n                // Get the array of IDs from fetchedVideoData.playlistId\r\n                const playlistIds = fetchedVideoData?.playlistId?.split(',') || [];\r\n\r\n                // Check if the current object's ID matches any ID in the playlistIds array\r\n                return playlistIds.includes(obj.id.toString());\r\n            });\r\n\r\n            setselectedPlalist(filteredObjects)\r\n            setImagePreview(fetchedVideoData.coverImage)\r\n            setImage(fetchedVideoData.coverImage)\r\n            setvideoFIle(fetchedVideoData.serverUrl)\r\n            setInputFields(prevInputFields => ({\r\n                ...prevInputFields,\r\n                pageUrl: fetchedVideoData.shopifyUrl,\r\n            }));\r\n            if (fetchedVideoData.shopifyUrl) {\r\n                if (fetchedVideoData.shopifyUrl.includes(\"https\") || fetchedVideoData.shopifyUrl.includes(\"http\")) {\r\n                    setSelectedCTATab(\"1\")\r\n                    setInputFields(prevInputFields => ({\r\n                        ...prevInputFields,\r\n                        \"pageUrl\": fetchedVideoData?.shopifyUrl?.trim(),\r\n                    }));\r\n                } else {\r\n                    setSelectedCTATab(\"2\")\r\n\r\n                    if (fetchedVideoData.shopifyUrl.includes(\"+\")) {\r\n                        setSelectedCallNowType(\"1\")\r\n                        // setNumber(fetchedVideoData.shopifyUrl)\r\n                        const arr = fetchedVideoData?.shopifyUrl?.split(\"+\")\r\n                        setNumber(arr[2].trim())\r\n                        // console.log(getCountryCodeByPhoneCode(`+${arr[1].trim()}`));\r\n                        setSelectedCountry((getCountryCodeByPhoneCode(`+${arr[1].trim()}`)))\r\n\r\n                    } else {\r\n                        setSelectedCallNowType(\"0\")\r\n                        setNumber(fetchedVideoData?.shopifyUrl?.trim())\r\n                    }\r\n                }\r\n            } else if (fetchedVideoData.productId) {\r\n                // console.log(products);\r\n                setSelectedCTATab(\"0\")\r\n                const filteredObjects = products.filter(obj => {\r\n                    // Get the array of IDs from fetchedVideoData.playlistId\r\n                    const productIds = fetchedVideoData?.productId?.split(',')?.map(id => id.trim()) || [];\r\n                    // Check if the current object's ID matches any ID in the playlistIds array\r\n                    return productIds.includes(obj.productId.toString());\r\n                });\r\n                setSelectedItems(filteredObjects)\r\n            }\r\n            // if()\r\n        }\r\n\r\n    }, [playlists, fetchedVideoData])\r\n\r\n\r\n    useEffect(() => {\r\n        // setInputFields(prevInputFields => ({\r\n        //     ...prevInputFields,\r\n        //     ctaBtn: videoSettings.buy_btn,\r\n        // }));\r\n        setInputFields(prevInputFields => ({\r\n            ...prevInputFields,\r\n            videoTitle: fetchedVideoData.videoTitle,\r\n        }));\r\n        if (fetchedVideoData?.ctaButton) {\r\n\r\n            if (!JSON.parse(fetchedVideoData?.ctaButton).cta_bg_color) {\r\n                setInputFields(prevInputFields => ({\r\n                    ...prevInputFields,\r\n                    ctaBtn: videoSettings.buy_btn,\r\n                }));\r\n\r\n                setColor(videoSettings.bk_color_buy_btn)\r\n                setColor2(videoSettings.front_color_buy_btn)\r\n            } else {\r\n                setInputFields(prevInputFields => ({\r\n                    ...prevInputFields,\r\n                    ctaBtn: JSON.parse(fetchedVideoData.ctaButton).cta_btn_text,\r\n                }));\r\n                setColor(JSON.parse(fetchedVideoData.ctaButton).cta_bg_color)\r\n                setColor2(JSON.parse(fetchedVideoData.ctaButton).cta_text_color)\r\n            }\r\n        }\r\n\r\n    }, [videoSettings, fetchedVideoData])\r\n    useEffect(() => {\r\n        videoDimentionType()\r\n    }, [videoFIle])\r\n    // video length\r\n    // phone num\r\n    // country code\r\n    const fetchDta = async () => {\r\n        const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\r\n        const targetUrl = inputFields.pageUrl;\r\n\r\n        try {\r\n            const response = await axios.get(proxyUrl + targetUrl);\r\n            const parser = new DOMParser();\r\n            const doc = parser.parseFromString(response.data, 'text/html');\r\n            const titleTag = doc.getElementsByTagName('title')[0];\r\n            const titleText = titleTag ? titleTag.innerText : 'No title found';\r\n            if (titleText) {\r\n                setInputFields(prevInputFields => ({\r\n                    ...prevInputFields,\r\n                    videoTitle: titleText,\r\n                }));\r\n            }\r\n            // setTitle(titleText);\r\n            // setError(null);\r\n        } catch (err) {\r\n            // setTitle(null);\r\n            // setError('Failed to fetch the title');\r\n            console.log(err);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (inputFields.pageUrl) {\r\n            fetchDta()\r\n        }\r\n    }, [inputFields.pageUrl])\r\n\r\n    return (\r\n        <div style={{ overflow: \"hidden\" }}>\r\n            <Helmet>\r\n                <title>SWIRL | Video edit</title>\r\n            </Helmet>\r\n            <div className='row' >\r\n                <div className='col-8' style={{ height: \"80vh\", overflow: \"auto\" }}>\r\n                    <p className='d-flex align-items-center gap-2'><BiArrowBack title='back' style={{ cursor: \"pointer\" }} onClick={() => navigate(\"/admin/svideos\")} size={20} />Edit Video</p>\r\n                    <div className='row text-muted'>\r\n                        <Form onSubmit={(e) => {\r\n                            {\r\n\r\n                                handleSubmitEdit(e)\r\n                            }\r\n                        }}>\r\n\r\n\r\n                            <label className='mt-3'>Title <sup className='text-danger'>*</sup></label>\r\n                            <Form.Control type='text' className='mt-2' placeholder='Enter video title' value={inputFields.videoTitle} name=\"videoTitle\" onChange={(e) => {\r\n                                handleInputChangeAllFields(e)\r\n                            }} required />\r\n                            <div className='d-flex mt-3'>\r\n                                <Form.Check\r\n                                    type=\"radio\"\r\n                                    label=\"Connect products\"\r\n                                    name=\"connect_product\"\r\n                                    id=\"connect_product\"\r\n                                    value=\"0\"\r\n                                    className={selectedCTATab === '0' ? 'selected-radio' : ''}\r\n                                    checked={selectedCTATab === '0'}\r\n                                    onChange={handleCTATabChange}\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"radio\"\r\n                                    label=\"Add URL\"\r\n                                    name=\"add_url\"\r\n                                    id=\"add_url\"\r\n                                    value=\"1\"\r\n                                    className={`ms-3 ${selectedCTATab === '1' ? 'selected-radio' : ''}`}\r\n                                    checked={selectedCTATab === '1'}\r\n                                    onChange={handleCTATabChange}\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"radio\"\r\n                                    label=\"Call now\"\r\n                                    name=\"c_now\"\r\n                                    id=\"c_now\"\r\n                                    value=\"2\"\r\n                                    className={`ms-3 ${selectedCTATab === '2' ? 'selected-radio' : ''}`}\r\n                                    checked={selectedCTATab === '2'}\r\n                                    onChange={handleCTATabChange}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                {selectedCTATab === '0' && (\r\n                                    <SelecteProducts data={products} selectedItems={selectedItems} setSelectedItems={setSelectedItems} />\r\n                                )}\r\n                                {selectedCTATab === '1' && (\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        className='form-control mt-3'\r\n                                        placeholder=\"Add page URL\"\r\n                                        name=\"pageUrl\"\r\n                                        value={inputFields.pageUrl}\r\n                                        onChange={(e) => {\r\n                                            handleInputChangeAllFields(e)\r\n                                        }}\r\n\r\n                                    // Add your props or state management for female input here\r\n                                    />\r\n                                )}\r\n\r\n                                {selectedCTATab === '2' && (\r\n                                    <>\r\n                                        <div className='row mt-3'>\r\n                                            <div className='col-3'>\r\n                                                <Form.Select aria-label=\"select call now type\" className='text-muted' onChange={(e) => {\r\n                                                    setSelectedCallNowType(e.target.value)\r\n                                                }}>\r\n                                                    <option selected={selectedCallNowType === \"0\"} value=\"0\">Toll-free</option>\r\n                                                    <option selected={selectedCallNowType === \"1\"} value=\"1\">Phone number</option>\r\n\r\n                                                </Form.Select>\r\n                                            </div>\r\n                                            <div className='col-9'>\r\n                                                {selectedCallNowType == \"0\" ? <Form.Control type='number' value={number} onChange={(e) => setNumber(e.target.value)} placeholder={selectedCallNowType == \"0\" ? \"Enter toll-free number\" : \"Enter phone number\"} aria-label=\"Text input with dropdown button\" /> : <InputGroup className=\"mb-3 country_btn\">\r\n                                                    <DropdownButton\r\n                                                        variant=\"outline-dark\"\r\n                                                        title={selectedCountry}\r\n                                                        className='country_btn'\r\n                                                        onSelect={(e) => handleDropdownSelect(e)}\r\n                                                        style={{ border: \"1px solid red\" }}\r\n\r\n                                                    >\r\n                                                        <Dropdown.Item eventKey=\"US\">US</Dropdown.Item>\r\n                                                        <Dropdown.Item eventKey=\"IN\">IN</Dropdown.Item>\r\n                                                        <Dropdown.Item eventKey=\"AU\">AU</Dropdown.Item>\r\n                                                    </DropdownButton>\r\n                                                    <Form.Control type='number' value={number} placeholder={selectedCallNowType == \"0\" ? \"Enter toll-free number\" : \"Enter phone number\"} aria-label=\"Text input with dropdown button\" onChange={(e) => setNumber(e.target.value)} />\r\n                                                </InputGroup>}\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </>\r\n                                )}\r\n                                <p className='mt-3'>Overlay CTA button</p>\r\n                                <div className='row mt-2'>\r\n                                    <div className='col-4'>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={inputFields.ctaBtn}\r\n                                            placeholder='Enquire now'\r\n                                            className=\"form-control\"\r\n                                            name='ctaBtn'\r\n                                            onChange={(e) => handleInputChangeAllFields(e)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className='col-4'>\r\n\r\n                                        <div className=\"input-group mb-3\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <span className=\"color_badge\" style={{ backgroundColor: color }}></span>\r\n                                            </span>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                value={color}\r\n                                                onClick={handleClick}\r\n                                                className=\"form-control pointer_cursor\"\r\n\r\n                                            />\r\n                                            <span className=\"input-group-text pointer_cursor\" onClick={handleClick}>\r\n                                                <IoColorPaletteOutline />\r\n                                            </span>\r\n                                        </div>\r\n\r\n                                        {showColorPicker && (\r\n                                            <div ref={colorPickerRef} style={{ position: 'absolute', zIndex: '2' }}>\r\n                                                <ChromePicker color={color} onChange={handleColorChange} />\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className='col-4'>\r\n                                        <div className=\"input-group mb-3\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <span className=\"color_badge\" style={{ backgroundColor: color2 }}></span>\r\n                                            </span>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                value={color2}\r\n                                                onClick={handleClick2}\r\n                                                className=\"form-control pointer_cursor\"\r\n\r\n                                            />\r\n                                            <span className=\"input-group-text pointer_cursor\" onClick={handleClick2}>\r\n                                                <IoColorPaletteOutline />\r\n                                            </span>\r\n                                        </div>\r\n\r\n                                        {showColorPicker2 && (\r\n                                            <div ref={colorPickerRef2} style={{ position: 'absolute', zIndex: '2' }}>\r\n                                                <ChromePicker color={color2} onChange={handleColorChange2} />\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <p className='d-none'>Select playlist</p>\r\n                            {/* <SelectPlayList className=\"d-none\" data={playlists} selectedPlalist={selectedPlalist} setselectedPlalist={setselectedPlalist} /> */}\r\n                            <p className='mt-2'>Cover image</p>\r\n                            <div className=\"input-group \">\r\n                                <Form.Control ref={fileInputRef} type=\"file\" accept=\"image/*\" placeholder=\"Select an image file\" // Change the placeholder\r\n                                    data-browse=\"Browse\" onChange={handleFileSelect} />\r\n                                {/* <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder='Select image'\r\n                                /> */}\r\n                                {/* <span className=\"input-group-text\">\r\n                                    <small >Browse</small>\r\n                                </span> */}\r\n                            </div>\r\n\r\n                            <small>File format: .png, .jpg, .webp</small>\r\n                            {imagePreview && <>\r\n                                <div className='card p-2 col-4 mt-4 m-auto'>\r\n                                    <img alt='preview' className='rounded' src={imagePreview} />\r\n                                </div>\r\n                            </>}\r\n                            {/* {imagePreview && image && <div className='card p-1 mt-2'>\r\n                                <div className='d-flex w-100'>\r\n                                    <img style={{ height: \"50px\", width: \"35px\", borderRadius: \"3px\" }} src={imagePreview} />\r\n                                    <div className='d-flex flex-column ps-2 pt-1'>\r\n                                        <small className='text-muted'>{fileInputRef?.current?.files[0]?.name}</small>\r\n                                        <small style={{ color: \"rgb(162, 162, 164)\" }}>{`${(fileInputRef?.current?.files[0]?.size / 1024).toFixed(2)}KB`} <b>.</b> <span className='text-success'>Uploaded</span></small>\r\n                                    </div>\r\n                                    <div className='ms-auto' onClick={() => clearSelection()}>\r\n                                        <IoClose className='pointer_cursor' />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>} */}\r\n                            <div>\r\n                                <button className='btn btn-sm mt-3 btn-dark'>Update {loading ? <FaSpinner className=\"spinning\" /> : \"\"}</button>\r\n                            </div>\r\n                        </Form>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className='col-4' >\r\n                    <div className='card' style={{ height: \"80vh\", padding: \"50px\", paddingTop: \"20px\", borderRadius: \"20px\", overflow: \"hidden\", backgroundColor: \"#F8F8FF\", borderRadius: '10px' }}>\r\n\r\n                        <div>\r\n\r\n                            <div style={{ position: \"relative\", height: \"70vh\", maxWidth: \"100%\", overflow: \"hidden\", borderRadius: \"20px\" }}>\r\n\r\n                                {videoFIle ? <video ref={videoRef} style={{ position: \"absolute\", top: 0, left: 0, width: \"100%\", height: \"100%\", objectFit: \"cover\" }} src={videoFIle} autoPlay muted /> : <div className='h-100 w-100' style={{ backgroundColor: \"#D9D9D9\" }}></div>}\r\n\r\n                                {previewUrl && <div style={{ position: \"absolute\", top: 0, right: 0, padding: \"10px\", color: \"white\" }} onClick={clearPreview}>\r\n                                    <span style={{ height: \"34px\", width: \"34px\", backgroundColor: \"#a2a2a4\", cursor: \"pointer\", borderRadius: \"50%\", display: \"grid\", placeItems: \"center\" }}>\r\n                                        <BiTrash className=' float-end' />\r\n                                    </span>\r\n                                </div>}\r\n                                <div style={{ position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\", textAlign: \"center\", color: \"white\" }}>\r\n                                    <div style={{ backgroundColor: \"#ffffff\", height: \"44px\", width: \"44px\", display: \"grid\", placeItems: \"center\", borderRadius: \"50%\" }}>\r\n                                        <FaPlay size={20} className='ps-1 pointer_cursor' color='#09121F' />\r\n                                    </div>\r\n                                </div>\r\n                                {selectedItems.length > 0 &&\r\n                                    <div className='w-100 p-3' style={{ position: \"absolute\", bottom: \"0\" }}>\r\n                                        <div className='d-flex bg-light rounded overflow-hidden' style={{\r\n                                            boxShadow: \"0px 4px 4px 0px #00000040\"\r\n                                        }}>\r\n                                            {/* <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS3CoT43dhDs24KOBENldI_y_OMEpP430XknIzXNGfp2Q&s' style={{ height: \"105px\", width: \"76px\" }} />\r\n                                            <div className='d-flex flex-column w-100 ps-2'>\r\n                                                <div className='m-0 p-0' style={{ fontSize: \"12px\",left:\"80%\" }}><span className='badge text-muted p-2' style={{ backgroundColor: \"#FCFCE4\" }}><BsFillStarFill className='text-success' />4.5</span></div>\r\n                                                <span className='product_title_preview' style={{ fontSize: \"13px\" }}>{selectedItems[0].productTitle.substring(0, 25)}</span>\r\n                                                <span style={{ fontSize: \"12px\", padding: \"2px\" }}>$300 <del className=\"text-muted\">$600</del><span className='badge_discount bg-success text-white fw-light p-1 rounded ms-1'><small>30%</small></span></span>\r\n                                                <div className='d-flex align-items-center gap-2'>\r\n                                                    <button className='btn btn-sm btn-dark' style={{ fontSize: \"12px\", width: \"68%\" }}>Buy Now</button>\r\n                                                    <MdAddShoppingCart size={35} className='pe-2' />\r\n                                                </div>\r\n                                            </div> */}\r\n\r\n\r\n                                        </div>\r\n                                    </div>}\r\n\r\n                            </div>\r\n\r\n                            {/* <div style={{ height: \"70vh\", maxWidth: \"100%\", objectFit: \"cover\", borderRadius: \"20px\", overflow: \"hidden\", position: \"absolute\" }}>\r\n                                <video ref={videoRef} style={{ height: \"70vh\", objectFit: \"cover\" }} src={previewUrl} autoPlay width=\"100%\" />\r\n                            </div>\r\n                            <div style={{ position: \"relative\", height: \"70vh\", color: \"#fff\" }}>\r\n                                <div>\r\n                                    <BiTrash className='text-danger float-end' />\r\n                                </div>\r\n                                <div style={{ height: '70vh', display: \"grid\", placeItems: \"center\" }}>\r\n                                    <div style={{ backgroundColor: \"#ffffff\", height: \"44px\", width: \"44px\", display: \"grid\", placeItems: \"center\", borderRadius: \"50%\" }}>\r\n                                        <FaPlay size={20} className='ps-1 pointer_cursor' color='#09121F' />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='text-center'>\r\n                                <button className='btn btn-dark mt-2' disabled={previewUrl ? false : true} onClick={() => setPreviewModel(true)}>Preview</button>\r\n                            </div> */}\r\n                            <div className='text-center'>\r\n                                <button className='btn btn-dark mt-2' disabled={imagePreview ? false : true} onClick={() => setPreviewModel(true)}>Preview</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* <RangeSlider min=\"5\" max=\"20\" id=\"range-slider\" /> */}\r\n                    </div>\r\n\r\n                </div>\r\n                <VideoPreviewModel show={previewModel} url={videoFIle} handleClose={handleClosePreviewModel} />\r\n            </div>\r\n            {/* {loading && <div style={{ position: \"relative\", height: \"80vh\", backgroundColor: \"rgba(255,255,255,0.6)\", width: \"100%\", display: \"grid\", placeItems: \"center\" }}>\r\n                <FallingLines\r\n                    color=\"#EEEE77\"\r\n                    width=\"100\"\r\n                    visible={true}\r\n                    ariaLabel=\"falling-circles-loading\"\r\n                />\r\n            </div>} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoEditPage"],"names":["VideoEditPage","navigate","useNavigate","selectedTab","setSelectedTab","useState","selectedCTATab","setSelectedCTATab","selectedItems","setSelectedItems","selectedCountry","setSelectedCountry","selectedCallNowType","setSelectedCallNowType","color","setColor","color2","setColor2","showColorPicker","setShowColorPicker","showColorPicker2","setShowColorPicker2","previewUrl","setPreviewUrl","videoFIle","setvideoFIle","previewModel","setPreviewModel","colorPickerRef","useRef","colorPickerRef2","coverImageData","setCoverImageData","selectedPlalist","setselectedPlalist","loadingPercent","setLoadingPercent","imagePreview","setImagePreview","user","useSelector","state","auth","playlists","setPlaylists","products","setProducts","videoSettings","setVideoSettings","number","setNumber","image","setImage","loading","setLoading","inputFields","setInputFields","videoTitle","ctaBtn","videURL","pageUrl","videoType","videLength","fetchedVideoData","setFetchedVideoData","urlarray","useLocation","pathname","split","videoData","length","videoDataForEdit","extractFieldAndJoin","array","fieldName","map","obj","join","videoRef","handleClick","handleInputChangeAllFields","e","name","value","target","prevInputFields","handleClick2","handleCTATabChange","event","useEffect","handleClickOutside","current","contains","document","addEventListener","removeEventListener","fileInputRef","handleSubmitEdit","async","preventDefault","formData","FormData","append","video_id","JSON","stringify","cta_btn_text","cta_bg_color","cta_text_color","code","country","countryCodes","phoneCode","getPhoneCodeByCountryCode","brand_id","axios","patch","headers","then","res","toast","success","catch","err","console","log","error","get","concat","data","playlist","getPlalists","getProducts","sscResponse","brandCustomization","getVideoSettings","_res$data","swirl","getVideoData","filteredObjects","filter","_fetchedVideoData$pla","playlistId","includes","id","toString","coverImage","serverUrl","shopifyUrl","_fetchedVideoData$sho","trim","_fetchedVideoData$sho2","arr","phonecode","x","getCountryCodeByPhoneCode","_fetchedVideoData$sho3","productId","_fetchedVideoData$pro","_fetchedVideoData$pro2","ctaButton","parse","buy_btn","bk_color_buy_btn","front_color_buy_btn","videoDimentionType","video","width","videoWidth","height","videoHeight","duration","targetUrl","response","titleTag","DOMParser","parseFromString","getElementsByTagName","titleText","innerText","fetchDta","_jsxs","style","overflow","children","_jsx","Helmet","className","BiArrowBack","title","cursor","onClick","size","Form","onSubmit","Control","type","placeholder","onChange","required","Check","label","checked","SelecteProducts","_Fragment","Select","selected","InputGroup","DropdownButton","variant","onSelect","border","Dropdown","Item","eventKey","backgroundColor","IoColorPaletteOutline","ref","position","zIndex","ChromePicker","newColor","hex","accept","file","files","reader","FileReader","onloadend","imageData","result","readAsDataURL","alt","src","FaSpinner","padding","paddingTop","borderRadius","maxWidth","top","left","objectFit","autoPlay","muted","right","clearPreview","display","placeItems","BiTrash","transform","textAlign","FaPlay","bottom","boxShadow","disabled","VideoPreviewModel","show","url","handleClose","handleClosePreviewModel"],"sourceRoot":""}