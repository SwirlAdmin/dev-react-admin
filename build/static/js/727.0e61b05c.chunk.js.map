{"version":3,"file":"static/js/727.0e61b05c.chunk.js","mappings":"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","sources":["components/upload/SelectPlayList.js","components/upload/SelecteProducts.js","components/upload/UplaodFIle.js","components/video-preview/VideoPreviewModel.js","pages/VideoEditPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Select, { components } from 'react-select';\r\nimport { MdDragIndicator } from \"react-icons/md\";\r\nimport { IoClose } from \"react-icons/io5\";\r\n\r\nconst SelectPlayList = ({ selectedPlalist, data, setselectedPlalist }) => {\r\n    const handleItemSelect = (selectedOption) => {\r\n        if (selectedOption.length > 0) {\r\n\r\n            if (parseInt(selectedOption[selectedOption.length - 1].videoCount) > 9) {\r\n                // setselectedPlalist(selectedOption.slice(0, selectedOption.length - 1));\r\n            } else {\r\n                setselectedPlalist(selectedOption)\r\n            }\r\n        } else {\r\n            setselectedPlalist(selectedOption)\r\n        }\r\n\r\n    };\r\n\r\n    const handleDragStart = (e, index) => {\r\n        e.dataTransfer.setData('index', index);\r\n    };\r\n\r\n    const handleDrop = (e, index) => {\r\n        const draggedIndex = e.dataTransfer.getData('index');\r\n        const draggedItem = selectedPlalist[draggedIndex];\r\n\r\n        const newItems = [...selectedPlalist];\r\n        newItems.splice(draggedIndex, 1);\r\n        newItems.splice(index, 0, draggedItem);\r\n\r\n        setselectedPlalist(newItems);\r\n    };\r\n\r\n    const handleDragOver = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const handleInputChange = (index, value) => {\r\n        const newItems = [...selectedPlalist];\r\n        newItems[index].name = value;\r\n        setselectedPlalist(newItems);\r\n    };\r\n\r\n    const handleRemoveItem = (index) => {\r\n        const newItems = [...selectedPlalist];\r\n        newItems.splice(index, 1);\r\n        setselectedPlalist(newItems);\r\n    };\r\n\r\n    const CustomOption = ({ children, ...props }) => {\r\n        return (\r\n            <components.Option {...props} isDisabled={parseInt(props.data.videoCount) > 9 ? true : false}>\r\n                <div className=\"w-100 d-flex\">\r\n                    <span>{children} {\" \"}{parseInt(props.data.videoCount) > 9 ? \"(Max videos selected)\" : \"\"}</span>\r\n                    <span\r\n                        className=\"text-dark float-end ms-auto\"\r\n                        style={{\r\n                            fontSize: \"14px\",\r\n                            paddingTop: \"3px\",\r\n                            paddingLeft: \"3px\",\r\n                            paddingRight: \"3px\",\r\n                            borderRadius: \"15px\",\r\n                            backgroundColor: \"rgb(238, 238, 119)\",\r\n                        }}\r\n                    >\r\n                        <small>\r\n                            {props.data.videoCount}{\" \"}\r\n                            {parseInt(props.data.videoCount) > 1 ? \"Videos\" : \"Video\"}\r\n                        </small>\r\n                    </span>\r\n                </div>\r\n\r\n            </components.Option>\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <div>\r\n                <Select\r\n                    options={data}\r\n                    isMulti\r\n                    value={selectedPlalist}\r\n                    onChange={handleItemSelect}\r\n                    placeholder=\"Select playlist\"\r\n                    getOptionLabel={(option) => option.name}\r\n                    getOptionValue={(option) => option.id}\r\n                    closeMenuOnSelect={false}\r\n                    components={{ Option: CustomOption }}\r\n                // components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n                />\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n                {selectedPlalist.map((item, index) => (\r\n                    <div\r\n                        key={index}\r\n                        onDragStart={(e) => handleDragStart(e, index)}\r\n                        onDragOver={handleDragOver}\r\n                        onDrop={(e) => handleDrop(e, index)}\r\n                        draggable\r\n                        className='m-1'\r\n                        style={{ background: \"#EEEE77\", color: \"#17171C\", padding: \"3px 9px\", borderRadius: '15px', cursor: \"pointer\" }}\r\n                    >\r\n                        <small> <MdDragIndicator /> {item.name} <IoClose style={{ marginTop: \"-2px\" }} onClick={() => handleRemoveItem(index)} /></small>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default SelectPlayList;\r\n","import React, { useState } from 'react';\r\nimport Select from 'react-select';\r\nimport { MdDragIndicator } from \"react-icons/md\";\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport { toast } from 'react-toastify';\r\n\r\nconst SelecteProducts = ({ data, selectedItems, setSelectedItems }) => {\r\n\r\n    const handleItemSelect = (selectedOption) => {\r\n        setSelectedItems(selectedOption);\r\n    };\r\n\r\n    const handleDragStart = (e, index) => {\r\n        e.dataTransfer.setData('index', index);\r\n    };\r\n\r\n    const handleDrop = (e, index) => {\r\n        const draggedIndex = e.dataTransfer.getData('index');\r\n        const draggedItem = selectedItems[draggedIndex];\r\n\r\n        const newItems = [...selectedItems];\r\n        newItems.splice(draggedIndex, 1);\r\n        newItems.splice(index, 0, draggedItem);\r\n\r\n        setSelectedItems(newItems);\r\n    };\r\n\r\n    const handleDragOver = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const handleInputChange = (index, value) => {\r\n        const newItems = [...selectedItems];\r\n        newItems[index].productTitle = value;\r\n        setSelectedItems(newItems);\r\n    };\r\n\r\n    const handleRemoveItem = (index) => {\r\n        const newItems = [...selectedItems];\r\n        newItems.splice(index, 1);\r\n        setSelectedItems(newItems);\r\n    };\r\n    const customStyles = {\r\n        control: (provided) => ({\r\n            ...provided,\r\n            width: '100%', // Make the input field full-width\r\n        }),\r\n        option: (provided) => ({\r\n            ...provided,\r\n            fontSize: '12px', // Adjust the font size for smaller tags\r\n        }),\r\n        // singleValue: (provided) => ({\r\n        //     ...provided,\r\n        //     fontSize: '12px', // Adjust the font size for smaller tags\r\n        //     width: '300px'\r\n        // }),\r\n    };\r\n    const truncateLabel = (label, maxLength) => {\r\n        if (label?.length <= maxLength) {\r\n            return label;\r\n        }\r\n        return label?.substring(0, maxLength) + '...';\r\n    };\r\n\r\n    const customFormatTagsLabel = ({ productTitle }, type) => {\r\n\r\n        if (!productTitle) return\r\n        if (type === \"option\") {\r\n            return productTitle\r\n        } else {\r\n            return truncateLabel(productTitle, 40);\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className='mt-3'>\r\n                <Select\r\n                    options={data}\r\n                    // formatOptionLabel={(e) => customFormatTagsLabel(e, \"tag\")}\r\n                    formatSelectedOptionLabel={(e) => customFormatTagsLabel(e, 'option')}\r\n                    hideSelectedOptions={true}\r\n                    className='w-100'\r\n                    isMulti={true}\r\n                    value={selectedItems}\r\n                    getOptionLabel={(option) => option.productTitle}\r\n                    getOptionValue={(option) => option.productId}\r\n                    onChange={handleItemSelect}\r\n                    placeholder=\"Attach Products\"\r\n                    closeMenuOnSelect={false}\r\n                    styles={customStyles}\r\n                    backspaceRemovesValue\r\n                    isOptionDisabled={() => selectedItems.length === 7}\r\n\r\n                />\r\n            </div>\r\n            <div style={{ display: \"flex\", flexWrap: 'wrap' }}>\r\n                {selectedItems.map((item, index) => (\r\n                    <div\r\n                        key={index}\r\n                        onDragStart={(e) => handleDragStart(e, index)}\r\n                        onDragOver={handleDragOver}\r\n                        onDrop={(e) => handleDrop(e, index)}\r\n                        draggable\r\n                        className='m-1'\r\n                        style={{ background: \"#EEEE77\", color: \"#17171C\", padding: \"3px 9px\", borderRadius: '15px', cursor: \"pointer\" }}\r\n                    >\r\n                        <small title={item.productTitle}> <MdDragIndicator /> {item.productTitle.slice(0, 20)} <IoClose style={{ marginTop: \"-2px\" }} onClick={() => handleRemoveItem(index)} /></small>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SelecteProducts;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { ProgressBar } from 'react-bootstrap';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { FaArrowUp } from \"react-icons/fa\";\r\nimport { IoClose } from 'react-icons/io5';\r\n\r\nfunction UplaodFile({ previewUrl, setPreviewUrl, clearPreview, loadingPercent, setvideoFIle }) {\r\n    // const onDrop = useCallback((acceptedFiles, rejectedFiles) => {\r\n    //     // Handle rejected files if needed\r\n    //     if (rejectedFiles.length > 0) {\r\n    //         console.error('Rejected files:', rejectedFiles);\r\n    //         // You can display an error message to the user here\r\n    //     }\r\n\r\n    //     if (acceptedFiles.length > 0) {\r\n    //         const file = acceptedFiles[0]; // Assuming single file upload for preview\r\n\r\n    //         // Validate file type\r\n    //         if (!file.type.startsWith('video/')) {\r\n    //             console.error('Invalid file type. Only videos allowed.');\r\n    //             return;\r\n    //         }\r\n    //         // const sdf = URL.createObjectURL(file)\r\n    //         // console.log(\"sdf\", file);\r\n\r\n\r\n    //         // setPreviewUrl(file)\r\n    //         const reader = new FileReader();\r\n\r\n    //         reader.onabort = (event) => {\r\n    //             console.log('file reading was aborted')\r\n    //         }\r\n\r\n    //         reader.onerror = (event) => {\r\n    //             console.log('file reading has failed')\r\n    //         }\r\n    //         reader.onload = (event) => {\r\n    //             console.log(event.target.result);\r\n    //             setPreviewUrl(event.target.result);\r\n    //         };\r\n    //         reader.readAsDataURL(file);\r\n    //     } else {\r\n    //         setPreviewUrl(null); // Clear preview if no files are dropped\r\n    //     }\r\n    // }, \r\n\r\n    //    []);\r\n\r\n    const onDrop = (acceptedFiles) => {\r\n        const file = acceptedFiles[0];\r\n        setPreviewUrl(file);\r\n        const preview = URL.createObjectURL(file)\r\n        setvideoFIle(preview)\r\n       \r\n    };\r\n\r\n\r\n    // const handleDrop = useCallback((acceptedFiles) => {\r\n    //     const formData = new FormData();\r\n    //     acceptedFiles.forEach(file => {\r\n    //         formData.append('files', file);\r\n    //     });\r\n\r\n    //     fetch('YOUR_BACKEND_ENDPOINT', {\r\n    //         method: 'POST',\r\n    //         body: formData,\r\n    //     })\r\n    //         .then(response => response.json())\r\n    //         .then(data => console.log(data))\r\n    //         .catch(error => console.error(error));\r\n    // }, []);\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n        onDrop,\r\n        noClick: false,\r\n        accept: { 'video/*': ['.mp4', '.MP4'] },\r\n        multiple: false\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className='mt-2' style={{ border: \"2px dashed #eeeeee\", borderRadius: '4px', padding: '20px', }}>\r\n                <div {...getRootProps()} style={dropzoneStyles} className='mt-2'>\r\n                    <input {...getInputProps()} />\r\n                    {\r\n                        isDragActive ?\r\n                            <p>Drop the files here ...</p> :\r\n                            <div className='d-flex flex-column '>\r\n                                <FaArrowUp className='m-auto ' />\r\n                                <small className='mt-2'>Drag & drop your files here or <u style={{ color: \"#334499\" }}>Browse</u></small>\r\n                                <small style={{ fontSize: \"10px\", color: \"#A2A2A4\" }}>Supported format: .mp4, Video ration: 9:16, 16:9 </small>\r\n                                <small style={{ fontSize: \"10px\", color: \"#A2A2A4\" }}> Video length: 180 sec max, Maximum size: 150MB</small>\r\n                            </div>\r\n                    }\r\n                </div>\r\n                {previewUrl && <>\r\n                    <div className='card p-1 mt-2'>\r\n                        <div className='d-flex w-100'>\r\n                            <img style={{ height: \"50px\", width: \"35px\", borderRadius: \"3px\" }} src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS3CoT43dhDs24KOBENldI_y_OMEpP430XknIzXNGfp2Q&s' />\r\n                            <div className='d-flex flex-column ps-2 pt-1'>\r\n                                <small className='text-muted'>{previewUrl?.name}</small>\r\n                                <small style={{ color: \"rgb(162, 162, 164)\" }}>{`${(previewUrl?.size / 1024 >= 1000 ? (previewUrl?.size / (1024 * 1024)).toFixed(2) + ' MB' : (previewUrl.size / 1024).toFixed(2) + ' KB')}`} <b>.</b> <span className='text-success'>Uploaded</span></small>\r\n                            </div>\r\n                            <div className='ms-auto' onClick={clearPreview}>\r\n                                <IoClose className='pointer_cursor' />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='mt-3'>\r\n                        <ProgressBar animated={parseInt(loadingPercent) < 100 ? true : false} variant={parseInt(loadingPercent) < 100 ? \"primary\" : \"success\"} now={loadingPercent} label={parseInt(loadingPercent) < 100 ? `${loadingPercent}%` : \"uploaded\"} />\r\n                    </div></>\r\n                }\r\n                {/* {previewUrl && (\r\n                    <div className='card p-1 mt-3'>\r\n                        <video src={previewUrl} controls width=\"100%\" />\r\n                    </div>\r\n                )} */}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst dropzoneStyles = {\r\n    textAlign: 'center',\r\n    cursor: 'pointer',\r\n};\r\n\r\nexport default UplaodFile;\r\n","import React from 'react'\r\nimport { Modal } from 'react-bootstrap';\r\nconst VideoPreviewModel = ({ show, handleClose, url }) => {\r\n    return (\r\n        <Modal show={show} className='d-grid modal_video' size='lg' onHide={handleClose}>\r\n\r\n            <Modal.Body>\r\n                <div className='row m-0 p-0' >\r\n                    <div style={{ maxWidth: \"400px\", margin: \"0\", padding: \"0\" }}>\r\n                        <video className='modal_video' controls width=\"600\" height=\"400\" autoPlay loop>\r\n                            <source src={url} type=\"video/mp4\" />\r\n                            Your browser does not support the video tag.\r\n                        </video>\r\n                    </div>\r\n\r\n                </div>\r\n            </Modal.Body>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default VideoPreviewModel","import React, { useEffect, useRef, useState } from 'react'\r\nimport { Dropdown, DropdownButton, Form, InputGroup } from 'react-bootstrap';\r\nimport { ChromePicker } from 'react-color';\r\nimport \"../components/upload-video/upload.css\"\r\nimport { IoColorPaletteOutline } from \"react-icons/io5\";\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport RangeSlider from 'react-range-slider-input';\r\nimport { FaPlay, FaSpinner } from \"react-icons/fa\";\r\nimport 'react-range-slider-input/dist/style.css';\r\n\r\nimport { MdAddShoppingCart } from \"react-icons/md\";\r\nimport { BiArrowBack, BiStar, BiTrash } from 'react-icons/bi';\r\nimport { BsFillStarFill } from 'react-icons/bs';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { FallingLines } from 'react-loader-spinner';\r\nimport countryCodes from '../utils/countryCodes';\r\nimport VideoPreviewModel from '../components/video-preview/VideoPreviewModel';\r\nimport SelecteProducts from '../components/upload/SelecteProducts';\r\nimport UplaodFile from '../components/upload/UplaodFIle';\r\nimport SelectPlayList from '../components/upload/SelectPlayList';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\n\r\nfunction getPhoneCodeByCountryCode(code) {\r\n    const country = countryCodes.find(country => country.code === code);\r\n    return country ? country.phoneCode : null;\r\n}\r\nfunction getCountryCodeByPhoneCode(phonecode) {\r\n    let x;\r\n    if (phonecode == \"+1\") {\r\n        x = \"US\"\r\n    } else if (phonecode == \"+91\") {\r\n        x = \"IN\"\r\n    } else if (phonecode == \"+61\") {\r\n        x = \"AU\"\r\n    }\r\n\r\n    return x\r\n}\r\nconst VideoEditPage = () => {\r\n    const navigate = useNavigate()\r\n    const [selectedTab, setSelectedTab] = useState('0');\r\n    const [selectedCTATab, setSelectedCTATab] = useState('0');\r\n    const [selectedItems, setSelectedItems] = useState([]);\r\n    const [selectedCountry, setSelectedCountry] = useState('US')\r\n    const [selectedCallNowType, setSelectedCallNowType] = useState('0')\r\n    const [color, setColor] = useState('#000000');\r\n    const [color2, setColor2] = useState('#ffa800');\r\n    const [showColorPicker, setShowColorPicker] = useState(false);\r\n    const [showColorPicker2, setShowColorPicker2] = useState(false);\r\n    const [previewUrl, setPreviewUrl] = useState(null);\r\n    const [videoFIle, setvideoFIle] = useState(null);\r\n    const [previewModel, setPreviewModel] = useState(false)\r\n    const colorPickerRef = useRef(null);\r\n    const colorPickerRef2 = useRef(null);\r\n    const [coverImageData, setCoverImageData] = useState(null);\r\n    const [selectedPlalist, setselectedPlalist] = useState([]);\r\n    const [loadingPercent, setLoadingPercent] = useState(0)\r\n    const [imagePreview, setImagePreview] = useState(null)\r\n    const user = useSelector(state => state.auth.user)\r\n    const [playlists, setPlaylists] = useState([])\r\n    const [products, setProducts] = useState([])\r\n    const [videoSettings, setVideoSettings] = useState({})\r\n    const [number, setNumber] = useState(\"\")\r\n    const [image, setImage] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const [inputFields, setInputFields] = useState({\r\n        videoTitle: '',\r\n        ctaBtn: '',\r\n        videURL: '',\r\n        pageUrl: '',\r\n        videoType: '',\r\n        videLength: 0\r\n\r\n    })\r\n    const [fetchedVideoData, setFetchedVideoData] = useState({})\r\n\r\n    const location = useLocation()\r\n    const urlarray = location.pathname.split('/')\r\n    const video_id = urlarray[urlarray.length - 1]\r\n    const videoData = useSelector(state => state.auth.videoDataForEdit)\r\n\r\n    // setPreviewUrl(videoData.)\r\n    function extractFieldAndJoin(array, fieldName) {\r\n        // Check if the array is not empty\r\n        if (array.length === 0) {\r\n            return \"\"; // Return an empty string if the array is empty\r\n        }\r\n\r\n        // Extract the specified field from each object\r\n        const values = array.map(obj => obj[fieldName]);\r\n\r\n        // Join the values into a comma-separated string\r\n        const result = values.join(\", \");\r\n\r\n        return result;\r\n    }\r\n    const videoRef = useRef(null);\r\n    const handleColorChange = (newColor) => {\r\n        setColor(newColor.hex);\r\n    };\r\n    const clearPreview = () => {\r\n        setPreviewUrl(null);\r\n        setvideoFIle(null)\r\n    };\r\n\r\n    const handleClosePreviewModel = () => {\r\n        setPreviewModel(false)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setShowColorPicker(!showColorPicker);\r\n    };\r\n    const handleColorChange2 = (newColor) => {\r\n        setColor2(newColor.hex);\r\n    };\r\n    const handleInputChangeAllFields = (e) => {\r\n        const { name, value } = e.target;\r\n        setInputFields(prevInputFields => ({\r\n            ...prevInputFields,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleClick2 = () => {\r\n        setShowColorPicker2(!showColorPicker2);\r\n    };\r\n\r\n    const handleTabChange = (event) => {\r\n        setSelectedTab(event.target.value);\r\n        setPreviewUrl(null)\r\n        setvideoFIle(null)\r\n    };\r\n    const handleCTATabChange = (event) => {\r\n        setSelectedCTATab(event.target.value);\r\n    };\r\n    const handleDropdownSelect = (value) => {\r\n        setSelectedCountry(value);\r\n    };\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (colorPickerRef.current && !colorPickerRef.current.contains(event.target)) {\r\n                setShowColorPicker(false);\r\n            }\r\n            if (colorPickerRef2.current && !colorPickerRef2.current.contains(event.target)) {\r\n                setShowColorPicker2(false);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n    const handleInputChange = (event) => {\r\n        setvideoFIle(event.target.value);\r\n        handleInputChangeAllFields(event)\r\n\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     if (videoRef.current) {\r\n    //         const videoElement = videoRef.current\r\n    //         videoElement.addEventListener('loadedmetadata', () => {\r\n    //             width = videoElement.videoWidth;\r\n    //             height = videoElement.videoHeight;\r\n\r\n\r\n    //         });\r\n    //     }\r\n    // }, [videoRef])\r\n\r\n    const videoDimentionType = () => {\r\n        const video = videoRef.current\r\n        if (video) {\r\n            video.addEventListener('loadedmetadata', () => {\r\n                const width = video.videoWidth;\r\n                const height = video.videoHeight;\r\n\r\n                setInputFields(prevInputFields => ({\r\n                    ...prevInputFields,\r\n                    videLength: video.duration,\r\n                }));\r\n                if (height > width) {\r\n                    setInputFields(prevInputFields => ({\r\n                        ...prevInputFields,\r\n                        videoType: \"portrait\",\r\n                    }));\r\n                } else if (width === height) {\r\n                    setInputFields(prevInputFields => ({\r\n                        ...prevInputFields,\r\n                        videoType: \"square\",\r\n                    }));\r\n                } else {\r\n                    setInputFields(prevInputFields => ({\r\n                        ...prevInputFields,\r\n                        videoType: \"landscape\",\r\n                    }));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // // Function to handle file selection\r\n    // const handleFileSelect = event => {\r\n    //     const file = event.target.files[0];\r\n    //     setCoverImageData(file);\r\n\r\n    // }\r\n\r\n    const handleFileSelect = (e) => {\r\n        const file = e.target.files[0];\r\n\r\n        if (file) {\r\n            setImage(file)\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                const imageData = reader.result;\r\n                setImagePreview(imageData);\r\n                // You can send the binary data (imageData) to your server here\r\n            };\r\n            reader.readAsDataURL(file); // Convert the file to a base64 encoded string\r\n        }\r\n    };\r\n    const fileInputRef = useRef(null);\r\n\r\n    const clearSelection = () => {\r\n        setCoverImageData(null);\r\n        setImagePreview(null)\r\n        if (fileInputRef.current) {\r\n            fileInputRef.current.value = ''; // Reset file input value\r\n        }\r\n    };\r\n    const handleSubmitEdit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n\r\n        try {\r\n            // setLoadingPercent(0);\r\n            const formData = new FormData();\r\n\r\n            formData.append('image', image);\r\n\r\n            formData.append('videoId', videoData.video_id);\r\n            formData.append('uploadType', selectedTab);\r\n            formData.append('selectedCallNowType', selectedCallNowType);\r\n            formData.append('videURL', inputFields.videURL);\r\n            formData.append('videoTitle', inputFields.videoTitle);\r\n            formData.append('cta_type', selectedCTATab);\r\n            formData.append('tollfree_or_phone', selectedCallNowType);\r\n            formData.append('ctaButton', JSON.stringify({\r\n                cta_btn_text: inputFields.ctaBtn,\r\n                cta_bg_color: color,\r\n                cta_text_color: color2\r\n            }));\r\n\r\n            formData.append('selectedPlylist', extractFieldAndJoin(selectedPlalist, \"id\"));\r\n            formData.append('connected_products', extractFieldAndJoin(selectedItems, \"productId\"));\r\n            // formData.append('cover_image', image);\r\n            formData.append('videoType', inputFields.videoType);\r\n            formData.append('video_duration', inputFields.videLength);\r\n            formData.append('country', getPhoneCodeByCountryCode(selectedCountry));\r\n            formData.append('number', number);\r\n            // formData.append('videoId', res.data.key.split(\".\")[0]);\r\n            // formData.append('uploadedVideoUrl', res.data.url.split('?')[0]);\r\n            formData.append('brandId', user.brand_id);\r\n            formData.append('productUrl', inputFields.pageUrl);\r\n            await axios.patch(\"https://liveshopping.asia/updateVideoData\", formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }).then((res) => {\r\n\r\n                setLoading(false)\r\n                toast.success(\"Swirl updated successfully!\")\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                setLoading(false)\r\n                toast.error(\"Something went wrong !\")\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.error(\"Something went wrong !\")\r\n        }\r\n    }\r\n\r\n    const handleSubmitUpload = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        if (!previewUrl && !videoFIle) {\r\n            console.error(\"No file selected for upload.\");\r\n            return;\r\n        }\r\n\r\n        if (videoFIle.includes(\"MP4\") || videoFIle.includes(\"mp4\") || videoFIle.includes(\"Mp4\")) {\r\n            try {\r\n                const config = {\r\n                    onUploadProgress: (progressEvent) => {\r\n                        const percentCompleted = Math.round(\r\n                            (progressEvent.loaded * 100) / progressEvent.total\r\n                        );\r\n                        // Update your UI with upload progress\r\n                    },\r\n                };\r\n                await axios.post(\"https://liveshopping.asia/uploadVideoWithUrl\", {\r\n                    videoURL: videoFIle\r\n                }, config).then((res) => {\r\n                    if (res.data.status == 1) {\r\n                        setLoading(false)\r\n                        setPreviewUrl(null)\r\n                        setselectedPlalist([])\r\n                        setSelectedItems([])\r\n                        setImage(null)\r\n                        setImagePreview(null)\r\n                        e.target.reset()\r\n                        toast.success('Video uploaded successfully')\r\n                    } else {\r\n                        toast.error(\"Something went wrong!\")\r\n                        setLoading(false)\r\n                    }\r\n                }).catch((error) => {\r\n                    console.log(error);\r\n                    setLoading(false)\r\n                    toast.error(\"Something went wrong!\")\r\n                })\r\n            } catch (error) {\r\n                console.log(error);\r\n                setLoading(false)\r\n                toast.error(\"Something went wrong!\")\r\n            }\r\n        } else {\r\n            try {\r\n                const res = await axios.post(\"https://liveshopping.asia/getSignedUrl\");\r\n                if (res.data.url) {\r\n\r\n                    await axios.put(res.data.url, previewUrl, {\r\n                        headers: {\r\n                            'Content-Type': previewUrl.type,\r\n                        },\r\n                        onUploadProgress: progressEvent => {\r\n                            const percentage = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n                            setLoadingPercent(percentage);\r\n                        }\r\n                    }).then(async (response) => {\r\n                        // setPreviewUrl(null);\r\n                        // setvideoFIle(null)\r\n                        // setLoadingPercent(0);\r\n                        const formData = new FormData();\r\n\r\n                        formData.append('image', image);\r\n                        formData.append('uploadType', selectedTab);\r\n                        formData.append('selectedCallNowType', selectedCallNowType);\r\n                        formData.append('videURL', inputFields.videURL);\r\n                        formData.append('videoTitle', inputFields.videoTitle);\r\n                        formData.append('cta_type', selectedCTATab);\r\n                        formData.append('tollfree_or_phone', selectedCallNowType);\r\n                        formData.append('ctaButton', JSON.stringify({\r\n                            cta_btn_text: inputFields.ctaBtn,\r\n                            cta_bg_color: color,\r\n                            cta_text_color: color2\r\n                        }));\r\n\r\n                        formData.append('selectedPlylist', extractFieldAndJoin(selectedPlalist, \"id\"));\r\n                        formData.append('connected_products', extractFieldAndJoin(selectedItems, \"productId\"));\r\n                        // formData.append('cover_image', image);\r\n                        formData.append('videoType', inputFields.videoType);\r\n                        formData.append('video_duration', inputFields.videLength);\r\n                        formData.append('country', getPhoneCodeByCountryCode(selectedCountry));\r\n                        formData.append('number', number);\r\n                        formData.append('videoId', res.data.key.split(\".\")[0]);\r\n                        formData.append('uploadedVideoUrl', res.data.url.split('?')[0]);\r\n                        formData.append('brandId', user.brand_id);\r\n                        formData.append('productUrl', inputFields.pageUrl);\r\n\r\n                        await axios.post(\"https://liveshopping.asia/insertVideo\", formData, {\r\n                            headers: {\r\n                                'Content-Type': 'multipart/form-data'\r\n                            }\r\n                        }).then((asdas) => {\r\n\r\n                            setLoading(false)\r\n                            setInputFields({\r\n                                videoTitle: videoSettings.buy_btn,\r\n                                ctaBtn: '',\r\n                                videURL: '',\r\n                                pageUrl: '',\r\n                                videoType: '',\r\n                                videLength: 0\r\n\r\n                            })\r\n                            setLoadingPercent(0)\r\n                            setvideoFIle(null)\r\n                            setPreviewUrl(null)\r\n                            setselectedPlalist([])\r\n                            setSelectedItems([])\r\n                            setImage(null)\r\n                            e.target.reset()\r\n                            toast.success('Video uploaded successfully')\r\n\r\n                        }).catch((error) => {\r\n                            console.log(error);\r\n                            setLoading(false)\r\n                            toast.error(\"Something went wrong!\")\r\n                        })\r\n                    }).catch((error) => {\r\n                        console.log(error);\r\n                        setLoading(false)\r\n                        toast.error(\"Something went wrong!\")\r\n                    })\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Upload error:\", error);\r\n                toast.error(\"Something went wrong!\")\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const getPlalists = async () => {\r\n        try {\r\n            await axios.get(`https://liveshopping.asia/getPlaylistByBrandId?brandId=${user.brand_id}`).then((res) => {\r\n                if (res.data.playlist) {\r\n                    setPlaylists(res.data.playlist)\r\n                } else {\r\n                    setPlaylists([])\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    const getProducts = async () => {\r\n        try {\r\n            await axios.get(`https://liveshopping.asia/getProductsByBrandId?brandId=${user.brand_id}`).then((res) => {\r\n                if (res.data.products) {\r\n                    setProducts(res.data.products)\r\n                } else {\r\n                    setProducts([])\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    const getVideoSettings = async () => {\r\n        try {\r\n            await axios.get(`https://liveshopping.asia/getSwirlShortCodeInfoByBrandId?brandId=${user.brand_id}`).then((res) => {\r\n\r\n                if (res.data.sscResponse) {\r\n                    setVideoSettings(res.data.sscResponse.brandCustomization)\r\n                }\r\n\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const getVideoData = async () => {\r\n        try {\r\n            await axios.get(`https://liveshopping.asia/getVideoInfoByVideoId?videoId=${videoData.video_id}`).then((res) => {\r\n                if (res.data?.swirl) {\r\n                    setFetchedVideoData(res.data.swirl)\r\n\r\n                }\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            })\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPlalists()\r\n        getProducts()\r\n        getVideoSettings()\r\n        getVideoData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (fetchedVideoData) {\r\n            const filteredObjects = playlists.filter(obj => {\r\n                // Get the array of IDs from fetchedVideoData.playlistId\r\n                const playlistIds = fetchedVideoData?.playlistId?.split(',') || [];\r\n\r\n                // Check if the current object's ID matches any ID in the playlistIds array\r\n                return playlistIds.includes(obj.id.toString());\r\n            });\r\n\r\n            setselectedPlalist(filteredObjects)\r\n            setImagePreview(fetchedVideoData.coverImage)\r\n            setImage(fetchedVideoData.coverImage)\r\n            setvideoFIle(fetchedVideoData.serverUrl)\r\n            setInputFields(prevInputFields => ({\r\n                ...prevInputFields,\r\n                pageUrl: fetchedVideoData.shopifyUrl,\r\n            }));\r\n            if (fetchedVideoData.shopifyUrl) {\r\n                if (fetchedVideoData.shopifyUrl.includes(\"https\") || fetchedVideoData.shopifyUrl.includes(\"http\")) {\r\n                    setSelectedCTATab(\"1\")\r\n                    setInputFields(prevInputFields => ({\r\n                        ...prevInputFields,\r\n                        \"pageUrl\": fetchedVideoData?.shopifyUrl?.trim(),\r\n                    }));\r\n                } else {\r\n                    setSelectedCTATab(\"2\")\r\n\r\n                    if (fetchedVideoData.shopifyUrl.includes(\"+\")) {\r\n                        setSelectedCallNowType(\"1\")\r\n                        // setNumber(fetchedVideoData.shopifyUrl)\r\n                        const arr = fetchedVideoData?.shopifyUrl?.split(\"+\")\r\n                        setNumber(arr[2].trim())\r\n                        // console.log(getCountryCodeByPhoneCode(`+${arr[1].trim()}`));\r\n                        setSelectedCountry((getCountryCodeByPhoneCode(`+${arr[1].trim()}`)))\r\n\r\n                    } else {\r\n                        setSelectedCallNowType(\"0\")\r\n                        setNumber(fetchedVideoData?.shopifyUrl?.trim())\r\n                    }\r\n                }\r\n            } else if (fetchedVideoData.productId) {\r\n                // console.log(products);\r\n                setSelectedCTATab(\"0\")\r\n                const filteredObjects = products.filter(obj => {\r\n                    // Get the array of IDs from fetchedVideoData.playlistId\r\n                    const productIds = fetchedVideoData?.productId?.split(',')?.map(id => id.trim()) || [];\r\n                    // Check if the current object's ID matches any ID in the playlistIds array\r\n                    return productIds.includes(obj.productId.toString());\r\n                });\r\n                setSelectedItems(filteredObjects)\r\n            }\r\n            // if()\r\n        }\r\n\r\n    }, [playlists, fetchedVideoData])\r\n\r\n\r\n    useEffect(() => {\r\n        // setInputFields(prevInputFields => ({\r\n        //     ...prevInputFields,\r\n        //     ctaBtn: videoSettings.buy_btn,\r\n        // }));\r\n        setInputFields(prevInputFields => ({\r\n            ...prevInputFields,\r\n            videoTitle: fetchedVideoData.videoTitle,\r\n        }));\r\n        if (fetchedVideoData?.ctaButton) {\r\n\r\n            if (!JSON.parse(fetchedVideoData?.ctaButton).cta_bg_color) {\r\n                setInputFields(prevInputFields => ({\r\n                    ...prevInputFields,\r\n                    ctaBtn: videoSettings.buy_btn,\r\n                }));\r\n\r\n                setColor(videoSettings.bk_color_buy_btn)\r\n                setColor2(videoSettings.front_color_buy_btn)\r\n            } else {\r\n                setInputFields(prevInputFields => ({\r\n                    ...prevInputFields,\r\n                    ctaBtn: JSON.parse(fetchedVideoData.ctaButton).cta_btn_text,\r\n                }));\r\n                setColor(JSON.parse(fetchedVideoData.ctaButton).cta_bg_color)\r\n                setColor2(JSON.parse(fetchedVideoData.ctaButton).cta_text_color)\r\n            }\r\n        }\r\n\r\n    }, [videoSettings, fetchedVideoData])\r\n    useEffect(() => {\r\n        videoDimentionType()\r\n    }, [videoFIle])\r\n    // video length\r\n    // phone num\r\n    // country code\r\n    const fetchDta = async () => {\r\n        const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\r\n        const targetUrl = inputFields.pageUrl;\r\n\r\n        try {\r\n            const response = await axios.get(proxyUrl + targetUrl);\r\n            const parser = new DOMParser();\r\n            const doc = parser.parseFromString(response.data, 'text/html');\r\n            const titleTag = doc.getElementsByTagName('title')[0];\r\n            const titleText = titleTag ? titleTag.innerText : 'No title found';\r\n            if (titleText) {\r\n                setInputFields(prevInputFields => ({\r\n                    ...prevInputFields,\r\n                    videoTitle: titleText,\r\n                }));\r\n            }\r\n            // setTitle(titleText);\r\n            // setError(null);\r\n        } catch (err) {\r\n            // setTitle(null);\r\n            // setError('Failed to fetch the title');\r\n            console.log(err);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (inputFields.pageUrl) {\r\n            fetchDta()\r\n        }\r\n    }, [inputFields.pageUrl])\r\n\r\n    return (\r\n        <div style={{ overflow: \"hidden\" }}>\r\n            <div className='row' >\r\n                <div className='col-8' style={{ height: \"80vh\", overflow: \"auto\" }}>\r\n                    <p className='d-flex align-items-center gap-2'><BiArrowBack title='back' style={{ cursor: \"pointer\" }} onClick={() => navigate(\"/admin/svideos\")} size={20} />Edit Video</p>\r\n                    <div className='row text-muted'>\r\n                        <Form onSubmit={(e) => {\r\n                            {\r\n\r\n                                handleSubmitEdit(e)\r\n                            }\r\n                        }}>\r\n\r\n\r\n                            <label className='mt-3'>Title <sup className='text-danger'>*</sup></label>\r\n                            <Form.Control type='text' className='mt-2' placeholder='Enter video title' value={inputFields.videoTitle} name=\"videoTitle\" onChange={(e) => {\r\n                                handleInputChangeAllFields(e)\r\n                            }} required />\r\n                            <div className='d-flex mt-3'>\r\n                                <Form.Check\r\n                                    type=\"radio\"\r\n                                    label=\"Connect products\"\r\n                                    name=\"connect_product\"\r\n                                    id=\"connect_product\"\r\n                                    value=\"0\"\r\n                                    checked={selectedCTATab === '0'}\r\n                                    onChange={handleCTATabChange}\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"radio\"\r\n                                    label=\"Add URL\"\r\n                                    name=\"add_url\"\r\n                                    id=\"add_url\"\r\n                                    value=\"1\"\r\n                                    className='ms-3'\r\n                                    checked={selectedCTATab === '1'}\r\n                                    onChange={handleCTATabChange}\r\n                                />\r\n                                <Form.Check\r\n                                    type=\"radio\"\r\n                                    label=\"Call now\"\r\n                                    name=\"c_now\"\r\n                                    id=\"c_now\"\r\n                                    value=\"2\"\r\n                                    className='ms-3'\r\n                                    checked={selectedCTATab === '2'}\r\n                                    onChange={handleCTATabChange}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                {selectedCTATab === '0' && (\r\n                                    <SelecteProducts data={products} selectedItems={selectedItems} setSelectedItems={setSelectedItems} />\r\n                                )}\r\n                                {selectedCTATab === '1' && (\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        className='form-control mt-3'\r\n                                        placeholder=\"Add page URL\"\r\n                                        name=\"pageUrl\"\r\n                                        value={inputFields.pageUrl}\r\n                                        onChange={(e) => {\r\n                                            handleInputChangeAllFields(e)\r\n                                        }}\r\n\r\n                                    // Add your props or state management for female input here\r\n                                    />\r\n                                )}\r\n\r\n                                {selectedCTATab === '2' && (\r\n                                    <>\r\n                                        <div className='row mt-3'>\r\n                                            <div className='col-3'>\r\n                                                <Form.Select aria-label=\"select call now type\" className='text-muted' onChange={(e) => {\r\n                                                    setSelectedCallNowType(e.target.value)\r\n                                                }}>\r\n                                                    <option selected={selectedCallNowType === \"0\"} value=\"0\">Toll-free</option>\r\n                                                    <option selected={selectedCallNowType === \"1\"} value=\"1\">Phone number</option>\r\n\r\n                                                </Form.Select>\r\n                                            </div>\r\n                                            <div className='col-9'>\r\n                                                {selectedCallNowType == \"0\" ? <Form.Control type='number' value={number} onChange={(e) => setNumber(e.target.value)} placeholder={selectedCallNowType == \"0\" ? \"Enter toll-free number\" : \"Enter phone number\"} aria-label=\"Text input with dropdown button\" /> : <InputGroup className=\"mb-3 country_btn\">\r\n                                                    <DropdownButton\r\n                                                        variant=\"outline-dark\"\r\n                                                        title={selectedCountry}\r\n                                                        className='country_btn'\r\n                                                        onSelect={(e) => handleDropdownSelect(e)}\r\n                                                        style={{ border: \"1px solid red\" }}\r\n\r\n                                                    >\r\n                                                        <Dropdown.Item eventKey=\"US\">US</Dropdown.Item>\r\n                                                        <Dropdown.Item eventKey=\"IN\">IN</Dropdown.Item>\r\n                                                        <Dropdown.Item eventKey=\"AU\">AU</Dropdown.Item>\r\n                                                    </DropdownButton>\r\n                                                    <Form.Control type='number' value={number} placeholder={selectedCallNowType == \"0\" ? \"Enter toll-free number\" : \"Enter phone number\"} aria-label=\"Text input with dropdown button\" onChange={(e) => setNumber(e.target.value)} />\r\n                                                </InputGroup>}\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </>\r\n                                )}\r\n                                <p className='mt-3'>Overlay CTA button</p>\r\n                                <div className='row mt-2'>\r\n                                    <div className='col-4'>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={inputFields.ctaBtn}\r\n                                            placeholder='Enquire now'\r\n                                            className=\"form-control\"\r\n                                            name='ctaBtn'\r\n                                            onChange={(e) => handleInputChangeAllFields(e)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className='col-4'>\r\n\r\n                                        <div className=\"input-group mb-3\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <span className=\"color_badge\" style={{ backgroundColor: color }}></span>\r\n                                            </span>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                value={color}\r\n                                                onClick={handleClick}\r\n                                                className=\"form-control pointer_cursor\"\r\n\r\n                                            />\r\n                                            <span className=\"input-group-text pointer_cursor\" onClick={handleClick}>\r\n                                                <IoColorPaletteOutline />\r\n                                            </span>\r\n                                        </div>\r\n\r\n                                        {showColorPicker && (\r\n                                            <div ref={colorPickerRef} style={{ position: 'absolute', zIndex: '2' }}>\r\n                                                <ChromePicker color={color} onChange={handleColorChange} />\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className='col-4'>\r\n                                        <div className=\"input-group mb-3\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <span className=\"color_badge\" style={{ backgroundColor: color2 }}></span>\r\n                                            </span>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                value={color2}\r\n                                                onClick={handleClick2}\r\n                                                className=\"form-control pointer_cursor\"\r\n\r\n                                            />\r\n                                            <span className=\"input-group-text pointer_cursor\" onClick={handleClick2}>\r\n                                                <IoColorPaletteOutline />\r\n                                            </span>\r\n                                        </div>\r\n\r\n                                        {showColorPicker2 && (\r\n                                            <div ref={colorPickerRef2} style={{ position: 'absolute', zIndex: '2' }}>\r\n                                                <ChromePicker color={color2} onChange={handleColorChange2} />\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <p>Select playlist</p>\r\n                            <SelectPlayList data={playlists} selectedPlalist={selectedPlalist} setselectedPlalist={setselectedPlalist} />\r\n                            <p className='mt-2'>Cover image</p>\r\n                            <div className=\"input-group \">\r\n                                <Form.Control ref={fileInputRef} type=\"file\" accept=\"image/*\" placeholder=\"Select an image file\" // Change the placeholder\r\n                                    data-browse=\"Browse\" onChange={handleFileSelect} />\r\n                                {/* <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder='Select image'\r\n                                /> */}\r\n                                {/* <span className=\"input-group-text\">\r\n                                    <small >Browse</small>\r\n                                </span> */}\r\n                            </div>\r\n\r\n                            <small>File format: .png, .jpg, .webp</small>\r\n                            {imagePreview && <>\r\n                                <div className='card p-2 col-4 mt-4 m-auto'>\r\n                                    <img alt='preview' className='rounded' src={imagePreview} />\r\n                                </div>\r\n                            </>}\r\n                            {/* {imagePreview && image && <div className='card p-1 mt-2'>\r\n                                <div className='d-flex w-100'>\r\n                                    <img style={{ height: \"50px\", width: \"35px\", borderRadius: \"3px\" }} src={imagePreview} />\r\n                                    <div className='d-flex flex-column ps-2 pt-1'>\r\n                                        <small className='text-muted'>{fileInputRef?.current?.files[0]?.name}</small>\r\n                                        <small style={{ color: \"rgb(162, 162, 164)\" }}>{`${(fileInputRef?.current?.files[0]?.size / 1024).toFixed(2)}KB`} <b>.</b> <span className='text-success'>Uploaded</span></small>\r\n                                    </div>\r\n                                    <div className='ms-auto' onClick={() => clearSelection()}>\r\n                                        <IoClose className='pointer_cursor' />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>} */}\r\n                            <div>\r\n                                <button className='btn btn-sm mt-3 btn-dark'>Update {loading ? <FaSpinner className=\"spinning\" /> : \"\"}</button>\r\n                            </div>\r\n                        </Form>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className='col-4' >\r\n                    <div className='card' style={{ height: \"80vh\", padding: \"50px\", paddingTop: \"20px\", borderRadius: \"20px\", overflow: \"hidden\", backgroundColor: \"#F8F8FF\", borderRadius: '10px' }}>\r\n\r\n                        <div>\r\n\r\n                            <div style={{ position: \"relative\", height: \"70vh\", maxWidth: \"100%\", overflow: \"hidden\", borderRadius: \"20px\" }}>\r\n\r\n                                {videoFIle ? <video ref={videoRef} style={{ position: \"absolute\", top: 0, left: 0, width: \"100%\", height: \"100%\", objectFit: \"cover\" }} src={videoFIle} autoPlay muted /> : <div className='h-100 w-100' style={{ backgroundColor: \"#D9D9D9\" }}></div>}\r\n\r\n                                {previewUrl && <div style={{ position: \"absolute\", top: 0, right: 0, padding: \"10px\", color: \"white\" }} onClick={clearPreview}>\r\n                                    <span style={{ height: \"34px\", width: \"34px\", backgroundColor: \"#a2a2a4\", cursor: \"pointer\", borderRadius: \"50%\", display: \"grid\", placeItems: \"center\" }}>\r\n                                        <BiTrash className=' float-end' />\r\n                                    </span>\r\n                                </div>}\r\n                                <div style={{ position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\", textAlign: \"center\", color: \"white\" }}>\r\n                                    <div style={{ backgroundColor: \"#ffffff\", height: \"44px\", width: \"44px\", display: \"grid\", placeItems: \"center\", borderRadius: \"50%\" }}>\r\n                                        <FaPlay size={20} className='ps-1 pointer_cursor' color='#09121F' />\r\n                                    </div>\r\n                                </div>\r\n                                {selectedItems.length > 0 &&\r\n                                    <div className='w-100 p-3' style={{ position: \"absolute\", bottom: \"0\" }}>\r\n                                        <div className='d-flex bg-light rounded overflow-hidden' style={{\r\n                                            boxShadow: \"0px 4px 4px 0px #00000040\"\r\n                                        }}>\r\n                                            {/* <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS3CoT43dhDs24KOBENldI_y_OMEpP430XknIzXNGfp2Q&s' style={{ height: \"105px\", width: \"76px\" }} />\r\n                                            <div className='d-flex flex-column w-100 ps-2'>\r\n                                                <div className='m-0 p-0' style={{ fontSize: \"12px\",left:\"80%\" }}><span className='badge text-muted p-2' style={{ backgroundColor: \"#FCFCE4\" }}><BsFillStarFill className='text-success' />4.5</span></div>\r\n                                                <span className='product_title_preview' style={{ fontSize: \"13px\" }}>{selectedItems[0].productTitle.substring(0, 25)}</span>\r\n                                                <span style={{ fontSize: \"12px\", padding: \"2px\" }}>$300 <del className=\"text-muted\">$600</del><span className='badge_discount bg-success text-white fw-light p-1 rounded ms-1'><small>30%</small></span></span>\r\n                                                <div className='d-flex align-items-center gap-2'>\r\n                                                    <button className='btn btn-sm btn-dark' style={{ fontSize: \"12px\", width: \"68%\" }}>Buy Now</button>\r\n                                                    <MdAddShoppingCart size={35} className='pe-2' />\r\n                                                </div>\r\n                                            </div> */}\r\n\r\n\r\n                                        </div>\r\n                                    </div>}\r\n\r\n                            </div>\r\n\r\n                            {/* <div style={{ height: \"70vh\", maxWidth: \"100%\", objectFit: \"cover\", borderRadius: \"20px\", overflow: \"hidden\", position: \"absolute\" }}>\r\n                                <video ref={videoRef} style={{ height: \"70vh\", objectFit: \"cover\" }} src={previewUrl} autoPlay width=\"100%\" />\r\n                            </div>\r\n                            <div style={{ position: \"relative\", height: \"70vh\", color: \"#fff\" }}>\r\n                                <div>\r\n                                    <BiTrash className='text-danger float-end' />\r\n                                </div>\r\n                                <div style={{ height: '70vh', display: \"grid\", placeItems: \"center\" }}>\r\n                                    <div style={{ backgroundColor: \"#ffffff\", height: \"44px\", width: \"44px\", display: \"grid\", placeItems: \"center\", borderRadius: \"50%\" }}>\r\n                                        <FaPlay size={20} className='ps-1 pointer_cursor' color='#09121F' />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='text-center'>\r\n                                <button className='btn btn-dark mt-2' disabled={previewUrl ? false : true} onClick={() => setPreviewModel(true)}>Preview</button>\r\n                            </div> */}\r\n                            <div className='text-center'>\r\n                                <button className='btn btn-dark mt-2' disabled={imagePreview ? false : true} onClick={() => setPreviewModel(true)}>Preview</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* <RangeSlider min=\"5\" max=\"20\" id=\"range-slider\" /> */}\r\n                    </div>\r\n\r\n                </div>\r\n                <VideoPreviewModel show={previewModel} url={videoFIle} handleClose={handleClosePreviewModel} />\r\n            </div>\r\n            {/* {loading && <div style={{ position: \"relative\", height: \"80vh\", backgroundColor: \"rgba(255,255,255,0.6)\", width: \"100%\", display: \"grid\", placeItems: \"center\" }}>\r\n                <FallingLines\r\n                    color=\"#EEEE77\"\r\n                    width=\"100\"\r\n                    visible={true}\r\n                    ariaLabel=\"falling-circles-loading\"\r\n                />\r\n            </div>} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoEditPage"],"names":["_ref","selectedPlalist","data","setselectedPlalist","handleDragOver","e","preventDefault","_jsxs","children","_jsx","Select","options","isMulti","value","onChange","selectedOption","length","parseInt","videoCount","placeholder","getOptionLabel","option","name","getOptionValue","id","closeMenuOnSelect","components","Option","_ref2","props","isDisabled","className","style","fontSize","paddingTop","paddingLeft","paddingRight","borderRadius","backgroundColor","display","map","item","index","onDragStart","handleDragStart","dataTransfer","setData","onDragOver","onDrop","handleDrop","draggedIndex","getData","draggedItem","newItems","splice","draggable","background","color","padding","cursor","MdDragIndicator","IoClose","marginTop","onClick","handleRemoveItem","selectedItems","setSelectedItems","formatSelectedOptionLabel","customFormatTagsLabel","type","productTitle","truncateLabel","label","maxLength","substring","hideSelectedOptions","productId","styles","control","provided","width","backspaceRemovesValue","isOptionDisabled","flexWrap","title","slice","dropzoneStyles","textAlign","previewUrl","setPreviewUrl","clearPreview","loadingPercent","setvideoFIle","getRootProps","getInputProps","isDragActive","useDropzone","acceptedFiles","file","preview","URL","createObjectURL","noClick","accept","multiple","_Fragment","border","FaArrowUp","height","src","concat","size","toFixed","ProgressBar","animated","variant","now","show","handleClose","url","Modal","onHide","Body","maxWidth","margin","controls","autoPlay","loop","getPhoneCodeByCountryCode","code","country","countryCodes","phoneCode","VideoEditPage","navigate","useNavigate","selectedTab","setSelectedTab","useState","selectedCTATab","setSelectedCTATab","selectedCountry","setSelectedCountry","selectedCallNowType","setSelectedCallNowType","setColor","color2","setColor2","showColorPicker","setShowColorPicker","showColorPicker2","setShowColorPicker2","videoFIle","previewModel","setPreviewModel","colorPickerRef","useRef","colorPickerRef2","coverImageData","setCoverImageData","setLoadingPercent","imagePreview","setImagePreview","user","useSelector","state","auth","playlists","setPlaylists","products","setProducts","videoSettings","setVideoSettings","number","setNumber","image","setImage","loading","setLoading","inputFields","setInputFields","videoTitle","ctaBtn","videURL","pageUrl","videoType","videLength","fetchedVideoData","setFetchedVideoData","urlarray","useLocation","pathname","split","videoData","videoDataForEdit","extractFieldAndJoin","array","fieldName","obj","join","videoRef","handleClick","handleInputChangeAllFields","target","prevInputFields","handleClick2","handleCTATabChange","event","useEffect","handleClickOutside","current","contains","document","addEventListener","removeEventListener","fileInputRef","async","axios","get","brand_id","then","res","playlist","error","console","log","getPlalists","getProducts","sscResponse","brandCustomization","getVideoSettings","video_id","_res$data","swirl","catch","getVideoData","filteredObjects","filter","_fetchedVideoData$pla","playlistId","includes","toString","coverImage","serverUrl","shopifyUrl","_fetchedVideoData$sho","trim","_fetchedVideoData$sho2","arr","phonecode","x","getCountryCodeByPhoneCode","_fetchedVideoData$sho3","_fetchedVideoData$pro","_fetchedVideoData$pro2","ctaButton","JSON","parse","cta_bg_color","cta_btn_text","cta_text_color","buy_btn","bk_color_buy_btn","front_color_buy_btn","videoDimentionType","video","videoWidth","videoHeight","duration","targetUrl","response","titleTag","DOMParser","parseFromString","getElementsByTagName","titleText","innerText","err","fetchDta","overflow","BiArrowBack","Form","onSubmit","formData","FormData","append","stringify","patch","headers","toast","success","handleSubmitEdit","Control","required","Check","checked","SelecteProducts","selected","InputGroup","DropdownButton","onSelect","Dropdown","Item","eventKey","IoColorPaletteOutline","ref","position","zIndex","ChromePicker","newColor","hex","SelectPlayList","files","reader","FileReader","onloadend","imageData","result","readAsDataURL","alt","FaSpinner","top","left","objectFit","muted","right","placeItems","BiTrash","transform","FaPlay","bottom","boxShadow","disabled","VideoPreviewModel","handleClosePreviewModel"],"sourceRoot":""}